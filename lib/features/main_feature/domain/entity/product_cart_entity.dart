
import 'package:eng_shop/features/main_feature/domain/entity/product_entity.dart';
import 'package:floor/floor.dart';


@Entity(tableName: "ProductFavoriteEntity")
class ProductCartEntity extends ProductEntity {
  ProductCartEntity({
    int? statusCode,
    int? id,
    int? fdate,
    int? hfdate,
    int? ftime,
    int? fupdate,
    int? hfupdate,
    int? utime,
    int? fdelete,
    int? hfdelete,
    int? dtime,
    int? userid,
    int? updateUserid,
    int? deleteUserid,
    int? flagnet,
    int? categoryId,
    int? branchId,
    int? storeId,
    int? itemId,
    String? barcode,
    int? munitId,
    int? unitId,
    int? quantityStart,
    int? buyAlertAmount,
    int? orderQntMin,
    int? quantity,
    int? quantityIn,
    int? lastSellQuantity,
    int? lastPurQuantity,
    int? saleQuantity,
    int? purchaseQuantity,
    int? itemEvalId,
    int? terminalPrinterId,
    String? categoryPrntr,
    int? isActive,
    int? isShowPrice,
    int? isDef,
    int? isPublish,
    int? isClose,
    int? isCompound,
    int? isPriceIncludeTax,
    int? isSpecialOffer,
    String? notes,
    String? xfile,
    String? atxt,
    String? etxt,
    int? expirDays,
    int? itemLocationId,
    String? locationCode,
    int? avaPurchasePrice,
    int? priceAddPer,
    int? priceAddValue,
    int? price,
    int? discPer,
    int? discValue,
    int? minPrice,
    int? lastSprice,
    int? lastBprice,
    int? isRetailSale,
    int? setItem,
    int? inUnitId,
    int? quantityUnit,
    int? xgrid,
    String? img,
    int? salesComm,
    int? visits,
    int? netPrice,
    String? adetails,
    String? edetails,
    int? isSerial,
    int? outId,
    int? isSize,
    int? isColor,
    int? isExpiredDate,
    int? avaStartPrice,
    String? barcodesOther,
    int? xtypeId,
    int? countryId,
    String? codeOrg,
    String? codesAlter,
    int? isForsale,
  }) : super(
    statusCode: statusCode,
    id: id,
    fdate: fdate,
    hfdate: hfdate,
    ftime: ftime,
    fupdate: fupdate,
    hfupdate: hfupdate,
    utime: utime,
    fdelete: fdelete,
    hfdelete: hfdelete,
    dtime: dtime,
    userid: userid,
    updateUserid: updateUserid,
    deleteUserid: deleteUserid,
    flagnet: flagnet,
    categoryId: categoryId,
    branchId: branchId,
    storeId: storeId,
    itemId: itemId,
    barcode: barcode,
    munitId: munitId,
    unitId: unitId,
    quantityStart: quantityStart,
    buyAlertAmount: buyAlertAmount,
    orderQntMin: orderQntMin,
    quantity: quantity,
    quantityIn: quantityIn,
    lastSellQuantity: lastSellQuantity,
    lastPurQuantity: lastPurQuantity,
    saleQuantity: saleQuantity,
    purchaseQuantity: purchaseQuantity,
    itemEvalId: itemEvalId,
    terminalPrinterId: terminalPrinterId,
    categoryPrntr: categoryPrntr,
    isActive: isActive,
    isShowPrice: isShowPrice,
    isDef: isDef,
    isPublish: isPublish,
    isClose: isClose,
    isCompound: isCompound,
    isPriceIncludeTax: isPriceIncludeTax,
    isSpecialOffer: isSpecialOffer,
    notes: notes,
    xfile: xfile,
    atxt: atxt,
    etxt: etxt,
    expirDays: expirDays,
    itemLocationId: itemLocationId,
    locationCode: locationCode,
    avaPurchasePrice: avaPurchasePrice,
    priceAddPer: priceAddPer,
    priceAddValue: priceAddValue,
    price: price,
    discPer: discPer,
    discValue: discValue,
    minPrice: minPrice,
    lastSprice: lastSprice,
    lastBprice: lastBprice,
    isRetailSale: isRetailSale,
    setItem: setItem,
    inUnitId: inUnitId,
    quantityUnit: quantityUnit,
    xgrid: xgrid,
    img: img,
    salesComm: salesComm,
    visits: visits,
    netPrice: netPrice,
    adetails: adetails,
    edetails: edetails,
    isSerial: isSerial,
    outId: outId,
    isSize: isSize,
    isColor: isColor,
    isExpiredDate: isExpiredDate,
    avaStartPrice: avaStartPrice,
    barcodesOther: barcodesOther,
    xtypeId: xtypeId,
    countryId: countryId,
    codeOrg: codeOrg,
    codesAlter: codesAlter,
    isForsale: isForsale,
  );
}